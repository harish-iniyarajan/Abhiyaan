#include "ros/ros.h"
#include "std_msgs/int32.h"
#include "std_msgs/String.h"
#include<sstream>

ros::Publisher pub;

void printmsg(const std_msgs::int32::ConstPtr & btrlvl)
{
    ros::Rate loop_rate(1);
    std_msgs::int32 msg;
    if(btrlvl->data<33)
    {
       int c=0;
       while(ros::ok())
       {
            if(!(count%2))
             msg.data=1;
            else
             msg.data=0;
          pub.publish(msg);
          ros::spinOnce();
          loop_rate.sleep();
          c++;
        }
     }
   else
   {
     msg.data=1;
     pub.publish(msg);
     ros::spin();
     loop_rate.sleep();
    }
}

int main(int argc, char **argv)
{
  ros::init(argc, argv, "batterylvl");
  ros::NodeHandle n;
  pub=n.advertise<std_msgs::String>("battery_warning_light", 1);
  ros::Subscriber sub=n.subscribe("battery_level", 1, printmsg);
  ros::spin();
  return 0;
}
